{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isuru\\\\Documents\\\\ISURU\\\\2020\\\\UNI\\\\SEM_2\\\\SEPT\\\\Assignment\\\\majorproject-5-wed-16-30-7\\\\FrontEnd\\\\agme-app\\\\src\\\\Components\\\\RegistrationForm.js\";\nimport React from 'react';\nimport './LoginForm.scss';\nimport UserService from '../Services/UserService';\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCustomerRegistration = e => {\n      e.preventDefault(); //Check if form contains any errors\n\n      const validateForm = errors => {\n        let valid = true;\n        Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n        return valid;\n      }; //Submit form if valid\n\n\n      if (validateForm(this.state.errors)) {\n        console.info('Valid Form');\n        let customer = {\n          name: this.state.name,\n          address: this.state.address,\n          phone: this.state.phone,\n          username: this.state.username,\n          password: this.state.password,\n          accountType: this.state.accountType\n        };\n        console.log('customerLogin =>' + JSON.stringify(customer));\n        UserService.createCustomer(customer); // UserService.createCustomer(customer).then(res => {\n        //     this.props.history.push('/dashboard');\n        // });\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'name':\n          errors.name = value.length > 25 ? 'Name too long!' : '';\n          break;\n\n        case 'username':\n          errors.username = value.length < 5 ? 'Username too short!' : '';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be atleast 8 characters long!' : '';\n          break;\n\n        case 'confirmPass':\n          errors.confirmPass = value !== this.state.password ? 'Password does not match!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {// console.log(errors)\n      });\n    };\n\n    this.state = {\n      name: '',\n      address: '',\n      phone: '',\n      username: '',\n      password: '',\n      confirmPass: '',\n      accountType: 'c',\n      errors: {\n        name: '',\n        address: '',\n        phone: '',\n        username: '',\n        password: '',\n        confirmPass: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getCustomerRegistration = this.getCustomerRegistration.bind(this);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"register\",\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"name\",\n      \"data-testid\": \"name\",\n      placeholder: \"Full Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), errors.name.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, errors.name), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"address\",\n      \"data-testid\": \"address\",\n      placeholder: \"Address\",\n      value: this.state.address,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"phone\",\n      \"data-testid\": \"phone\",\n      placeholder: \"Phone Number\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"username\",\n      \"data-testid\": \"username\",\n      placeholder: \"User Name\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), errors.username.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, errors.username), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-field\",\n      name: \"password\",\n      \"data-testid\": \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, errors.password), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-field\",\n      name: \"confirmPass\",\n      placeholder: \"Confirm Password\",\n      value: this.state.confirmPass,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), errors.confirmPass.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, errors.confirmPass), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      onClick: this.getCustomerRegistration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Register\"));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/isuru/Documents/ISURU/2020/UNI/SEM_2/SEPT/Assignment/majorproject-5-wed-16-30-7/FrontEnd/agme-app/src/Components/RegistrationForm.js"],"names":["React","UserService","RegistrationForm","Component","constructor","props","getCustomerRegistration","e","preventDefault","validateForm","errors","valid","Object","values","forEach","val","length","state","console","info","customer","name","address","phone","username","password","accountType","log","JSON","stringify","createCustomer","error","handleChange","event","value","target","confirmPass","setState","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './LoginForm.scss';\r\nimport UserService from '../Services/UserService';\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            address: '',\r\n            phone: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPass: '',\r\n            accountType: 'c',\r\n\r\n            errors: {\r\n                name: '',\r\n                address: '',\r\n                phone: '',\r\n                username: '',\r\n                password: '',\r\n                confirmPass: '',\r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getCustomerRegistration = this.getCustomerRegistration.bind(this);\r\n    }\r\n\r\n\r\n    getCustomerRegistration = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Check if form contains any errors\r\n        const validateForm = (errors) => {\r\n            let valid = true;\r\n            Object.values(errors).forEach(\r\n                (val) => val.length > 0 && (valid = false)\r\n            );\r\n            return valid;\r\n        }\r\n\r\n        //Submit form if valid\r\n        if (validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n            let customer = {\r\n                name: this.state.name,\r\n                address: this.state.address,\r\n                phone: this.state.phone,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                accountType: this.state.accountType\r\n            };\r\n            console.log('customerLogin =>' + JSON.stringify(customer));\r\n\r\n            UserService.createCustomer(customer);\r\n            // UserService.createCustomer(customer).then(res => {\r\n            //     this.props.history.push('/dashboard');\r\n            // });\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                errors.name =\r\n                    value.length > 25\r\n                        ? 'Name too long!'\r\n                        : '';\r\n                break;\r\n            case 'username':\r\n                errors.username =\r\n                    value.length < 5\r\n                        ? 'Username too short!'\r\n                        : '';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be atleast 8 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'confirmPass':\r\n                errors.confirmPass =\r\n                    value !== this.state.password\r\n                        ? 'Password does not match!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors, [name]: value }, () => {\r\n            // console.log(errors)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <form id=\"register\" className=\"input-group\">\r\n                <input type=\"text\" className=\"input-field\" name='name' data-testid=\"name\" placeholder=\"Full Name\" value={this.state.name} onChange={this.handleChange} required />\r\n                {errors.name.length > 0 &&\r\n                    <span className='error'>{errors.name}</span>}\r\n                <input type=\"text\" className=\"input-field\" name='address' data-testid=\"address\" placeholder=\"Address\" value={this.state.address} onChange={this.handleChange} required />\r\n                <input type=\"text\" className=\"input-field\" name='phone' data-testid=\"phone\" placeholder=\"Phone Number\" value={this.state.phone} onChange={this.handleChange} required />\r\n                <input type=\"text\" className=\"input-field\" name='username' data-testid=\"username\" placeholder=\"User Name\" value={this.state.username} onChange={this.handleChange} required />\r\n                {errors.username.length > 0 &&\r\n                    <span className='error'>{errors.username}</span>}\r\n                <input type=\"password\" className=\"input-field\" name='password' data-testid=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} required />\r\n                {errors.password.length > 0 &&\r\n                    <span className='error'>{errors.password}</span>}\r\n                <input type=\"password\" className=\"input-field\" name='confirmPass' placeholder=\"Confirm Password\" value={this.state.confirmPass} onChange={this.handleChange} required />\r\n                {errors.confirmPass.length > 0 &&\r\n                    <span className='error'>{errors.confirmPass}</span>}\r\n                <button type=\"submit\" className=\"submit-btn\" onClick={this.getCustomerRegistration}>Register</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}