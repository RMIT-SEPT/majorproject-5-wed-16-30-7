{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isuru\\\\Documents\\\\ISURU\\\\2020\\\\UNI\\\\SEM_2\\\\SEPT\\\\Assignment\\\\majorproject-5-wed-16-30-7\\\\FrontEnd\\\\agme-app\\\\src\\\\Components\\\\EditDetails.js\";\nimport React from 'react'; // import axios from 'axios';\n\nimport UserService from '../Services/UserService';\nexport default class EditDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'name':\n          errors.name = value.length > 25 ? 'Name too long!' : '';\n          break;\n\n        case 'username':\n          errors.username = value.length < 5 ? 'Username too short!' : '';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be atleast 8 characters long!' : '';\n          break;\n\n        case 'confirmPass':\n          errors.confirmPass = value !== this.state.password ? 'Password does not match!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {// console.log(errors)\n      });\n    };\n\n    this.editdetails = e => {\n      e.preventDefault(); //Check if form contains any errors\n\n      const validateForm = errors => {\n        let valid = true;\n        Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n        return valid;\n      }; //Submit form if valid\n\n\n      if (validateForm(this.state.errors)) {\n        console.info('Valid Form');\n        let customer = {\n          //ADD ID\n          name: this.state.name,\n          address: this.state.address,\n          phone: this.state.phone,\n          username: this.state.username,\n          password: this.state.password,\n          accountType: this.state.accountType\n        };\n        console.log('customerLogin =>' + JSON.stringify(customer));\n        console.log(this.state.currentId);\n        UserService.editCustomer(customer, this.state.currentId); // UserService.createCustomer(customer).then(res => {\n        //     this.props.history.push('/dashboard');\n        // });\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n\n    this.selectUser = e => {\n      const person = this.state.persons[e.target.value - 1];\n      this.setState({\n        currentId: e.target.value\n      });\n      this.setState({\n        name: person.name\n      });\n      this.setState({\n        address: person.address\n      });\n      this.setState({\n        phone: person.phone\n      });\n      this.setState({\n        username: person.username\n      });\n      this.setState({\n        password: person.password\n      });\n    };\n\n    this.state = {\n      name: '',\n      address: '',\n      phone: '',\n      username: '',\n      password: '',\n      confirmPass: '',\n      accountType: 'c',\n      persons: [],\n      currentId: '',\n      errors: {\n        name: '',\n        address: '',\n        phone: '',\n        username: '',\n        password: '',\n        confirmPass: ''\n      }\n    };\n    UserService.getCustomer().then(res => {\n      this.setState({ ...this.state,\n        persons: res.data\n      });\n    });\n    this.handleChange = this.handleChange.bind(this);\n    this.editdetails = this.editdetails.bind(this);\n    this.selectUser = this.selectUser.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getCustomer().then(res => {\n      const persons = res.data;\n      this.setState({\n        persons\n      });\n      console.log(this.state.persons);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"dropdown\",\n      onChange: this.selectUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, this.state.persons.map(person => /*#__PURE__*/React.createElement(\"option\", {\n      value: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, person.id)))), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"editdetails\",\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"name\",\n      placeholder: \"Full Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"address\",\n      placeholder: \"Address\",\n      value: this.state.address,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      name: \"phone\",\n      placeholder: \"Phone Number\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      id: \"usernamefield\",\n      name: \"username\",\n      placeholder: \"User Name\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-field\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      onClick: this.editdetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Edit\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/isuru/Documents/ISURU/2020/UNI/SEM_2/SEPT/Assignment/majorproject-5-wed-16-30-7/FrontEnd/agme-app/src/Components/EditDetails.js"],"names":["React","UserService","EditDetails","Component","constructor","props","handleChange","event","preventDefault","name","value","target","errors","state","length","username","password","confirmPass","setState","editdetails","e","validateForm","valid","Object","values","forEach","val","console","info","customer","address","phone","accountType","log","JSON","stringify","currentId","editCustomer","error","selectUser","person","persons","getCustomer","then","res","data","bind","componentDidMount","render","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// import axios from 'axios';\r\nimport UserService from '../Services/UserService';\r\nexport default class EditDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            address: '',\r\n            phone: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPass: '',\r\n            accountType: 'c',\r\n            persons: [],\r\n            currentId: '',\r\n            errors: {\r\n                name: '',\r\n                address: '',\r\n                phone: '',\r\n                username: '',\r\n                password: '',\r\n                confirmPass: '',\r\n            }\r\n        };\r\n\r\n\r\n        UserService.getCustomer()\r\n            .then(res => {\r\n\r\n                this.setState({ ...this.state, persons: res.data });\r\n            })\r\n\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.editdetails = this.editdetails.bind(this);\r\n        this.selectUser = this.selectUser.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        UserService.getCustomer()\r\n            .then(res => {\r\n                const persons = res.data;\r\n                this.setState({ persons });\r\n                console.log(this.state.persons);\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                errors.name =\r\n                    value.length > 25\r\n                        ? 'Name too long!'\r\n                        : '';\r\n                break;\r\n            case 'username':\r\n                errors.username =\r\n                    value.length < 5\r\n                        ? 'Username too short!'\r\n                        : '';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be atleast 8 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'confirmPass':\r\n                errors.confirmPass =\r\n                    value !== this.state.password\r\n                        ? 'Password does not match!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors, [name]: value }, () => {\r\n            // console.log(errors)\r\n        })\r\n    }\r\n\r\n\r\n    editdetails = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Check if form contains any errors\r\n        const validateForm = (errors) => {\r\n            let valid = true;\r\n            Object.values(errors).forEach(\r\n                (val) => val.length > 0 && (valid = false)\r\n            );\r\n            return valid;\r\n        }\r\n\r\n        //Submit form if valid\r\n        if (validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n            let customer = {\r\n                //ADD ID\r\n                name: this.state.name,\r\n                address: this.state.address,\r\n                phone: this.state.phone,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                accountType: this.state.accountType\r\n            };\r\n            console.log('customerLogin =>' + JSON.stringify(customer));\r\n            console.log(this.state.currentId);\r\n            UserService.editCustomer(customer, this.state.currentId);\r\n            // UserService.createCustomer(customer).then(res => {\r\n            //     this.props.history.push('/dashboard');\r\n            // });\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n\r\n    }\r\n\r\n    selectUser = (e) => {\r\n        const person = this.state.persons[(e.target.value) - 1];\r\n        this.setState({ currentId: e.target.value })\r\n        this.setState({ name: person.name });\r\n        this.setState({ address: person.address });\r\n        this.setState({ phone: person.phone });\r\n        this.setState({ username: person.username });\r\n        this.setState({ password: person.password });\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                <div>\r\n                    <select id=\"dropdown\" onChange={this.selectUser} >\r\n                        {this.state.persons.map(person => (\r\n                            <option value={person.id}>{person.id}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <form id=\"editdetails\" className=\"input-group\">\r\n                    <input type=\"text\" className=\"input-field\" name='name' placeholder=\"Full Name\" value={this.state.name} onChange={this.handleChange} required />\r\n                    <input type=\"text\" className=\"input-field\" name='address' placeholder=\"Address\" value={this.state.address} onChange={this.handleChange} required />\r\n                    <input type=\"text\" className=\"input-field\" name='phone' placeholder=\"Phone Number\" value={this.state.phone} onChange={this.handleChange} required />\r\n                    <input type=\"text\" className=\"input-field\" id=\"usernamefield\" name='username' placeholder=\"User Name\" value={this.state.username} onChange={this.handleChange} required />\r\n                    <input type=\"password\" className=\"input-field\" id=\"password\" name='password' placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} required />\r\n                    <button type=\"submit\" className=\"submit-btn\" onClick={this.editdetails}>Edit</button>\r\n                </form>\r\n            </ul>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}